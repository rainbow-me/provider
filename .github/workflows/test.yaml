
name: CI

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
jobs:
  # INSTALL DEPS
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
          cache: 'yarn'
      - name: Install deps via Yarn
        run: yarn
      - name: Check for frozen lockfile
        run: yarn check-lockfile
      - name: Zip node_modules
        run: tar czf node_modules.tar.gz node_modules/
      - name: Upload deps artifacts
        uses: actions/upload-artifact@v3
        with:
          name: node_modules.tar.gz
          path: node_modules.tar.gz

  # TEST
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: [install]
    env:
      DISPLAY: :0
      VITEST_SEGFAULT_RETRY: 3
    steps:
      - uses: actions/checkout@v3
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - name: Append GitHub Access Token to .env
        run: echo "ETH_MAINNET_RPC=${{ secrets.ETH_MAINNET_RPC }}" >> .env
      - name: Install Anvil
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Run tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: yarn test
 
  # LINT, TYPECHECK, AUDIT
  ci-checks:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - name: Lint
        run: yarn lint
      - name: Audit CI
        run:  yarn audit:ci
      - name: Check types
        run: yarn typecheck